[{"C:\\Users\\User\\Desktop\\props\\src\\index.js":"1","C:\\Users\\User\\Desktop\\props\\src\\App.js":"2","C:\\Users\\User\\Desktop\\props\\src\\reportWebVitals.js":"3","C:\\Users\\User\\Desktop\\props\\src\\data.js":"4","C:\\Users\\User\\Desktop\\props\\src\\Profile\\profile.js":"5"},{"size":500,"mtime":499162500000,"results":"6","hashOfConfig":"7"},{"size":292,"mtime":1611513462561,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":499162500000,"results":"9","hashOfConfig":"7"},{"size":667,"mtime":1611506100093,"results":"10","hashOfConfig":"7"},{"size":1551,"mtime":1611510153476,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"zzzo3y",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"14"},"C:\\Users\\User\\Desktop\\props\\src\\index.js",[],["24","25"],"C:\\Users\\User\\Desktop\\props\\src\\App.js",[],"C:\\Users\\User\\Desktop\\props\\src\\reportWebVitals.js",[],"C:\\Users\\User\\Desktop\\props\\src\\data.js",[],"C:\\Users\\User\\Desktop\\props\\src\\Profile\\profile.js",["26"],"\r\nimport {FaInfoCircle } from \"react-icons/fa\"\r\nimport {IconContext} from \"react-icons\"\r\n\r\n\r\n\r\nconst Profile = ({ data }) => {\r\n      \r\n      const handelName = (fullName) => {alert(`Hello I am ${fullName}`);\r\n     \r\n};\r\n      return ( \r\n      \r\n            <>\r\n          { data.map((data, i) => (\r\n                  <div className=\"card mb-3 \" style={{ margin: \"150px 250px 200px 250px\" }}>\r\n                        {console.log(data.fullName)}\r\n      \r\n                      <div className=\"row no-gutters\">\r\n                         <div className=\"col-md-4\">\r\n                           <img alt=\"photo\" src={data.photo} style={{width:\"300px\",height:\"313px\"}}/>\r\n                         </div>\r\n                       <div className=\"col-md-8\">\r\n                       <div className=\"card-body\">\r\n                           <h5 className=\"card-title\">{data.fullName}</h5>\r\n                           <p className=\"card-text\">{data.bio}</p>\r\n                           <p className=\"card-text\"> <small className=\"text-muted\">{data.profession}</small> </p>\r\n                           <IconContext.Provider value={{ style: {fontSize: '30px', color: \"red\"}}}>\r\n                           < FaInfoCircle onClick={() => handelName(data.fullName)}/>\r\n                           </IconContext.Provider>\r\n                       </div>\r\n                       </div>\r\n                       </div>\r\n                   </div>\r\n                   \r\n             )) } \r\n             </>\r\n              )\r\n            } \r\n      \r\n      export default Profile",{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","severity":1,"message":"32","line":21,"column":28,"nodeType":"33","endLine":21,"endColumn":102},"no-native-reassign",["34"],"no-negated-in-lhs",["35"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You donâ€™t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]